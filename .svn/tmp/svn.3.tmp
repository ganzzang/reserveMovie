package com.cinema.web.member.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import com.cinema.web.common.constant.CommonConst;
import com.cinema.web.member.bean.MemberBean;
import com.cinema.web.member.service.MemberService;

@Controller
public class MemberController {
	
	private static final String String = null;
	@Autowired
	private MemberService memberService;
	
	// joinMember : 회원가입
	@RequestMapping("/member/insertJoinProc")
	public String insertJoinProc(MemberBean memberBean, Model model, HttpSession session) {
		
		String rtnUrl = "";
		//세션이 입력값의 분실을 방지하기 위해 저장해둔다.
		session.setAttribute("insertBean", memberBean);
		
		try {
			int rtnVal =  memberService.insertMember(memberBean);
			
			//성공
			if(rtnVal > 0) {
			
				
				rtnUrl = "/member/loginAf.do";
				//session.removeAttribute("insertBean");
				session.setAttribute("loginBean", memberBean);
			} 
			//실패
			else {
				rtnUrl = "/index.do";
			}
			
		} catch(Exception e) {
			e.printStackTrace();
			//response
			model.addAttribute("result", "fail");
			model.addAttribute("resultMsg", e.getMessage());
			
			rtnUrl = "/member/joinMember.do";
		}
		return "redirect:" + rtnUrl;
	}
	
	// 멤버리스트/검색
	// 해당 아이디에 상응하는 회원정보 출력
	@RequestMapping("/member/selectMember")
	public String selectMember(MemberBean memberBean, HttpSession session, HttpServletRequest request,
			Model model) 
	{
		System.out.println(memberBean.getMemberId());
		
		MemberBean mBean = memberService.selectMember(memberBean);
		
		if(mBean != null) {
			
			System.out.println( mBean.getMemberId());
			System.out.println( mBean.getName() );
			System.out.println( mBean.getEmail() );
			System.out.println( mBean.getTel() );
			System.out.println( mBean.getRegDate() );
			System.out.println(	mBean.getReserve());	
		} 

		//실어 나른다.
		model.addAttribute("memberBean", mBean);
		
		return "/member/memberInfo";
	}
	
	// 로그인 진행
	@RequestMapping("/member/loginProc")
	public String loginProc(MemberBean mBean, HttpSession session) {
		
		boolean resBool = memberService.selectLoginMember(mBean);
		
		if(resBool) {
			MemberBean selBean = memberService.selectMember(mBean);
			//세션에 저장                            
			session.setAttribute("loginBean", selBean);
			// 페이지이동완료. 주소창 변동없음. 확인필요
			return "/member/loginAf";
			
		}
		return "/member/loginBf";
	}
	
	// 회원목록 조회
	@RequestMapping("/member/selectMemberList")
	public String selectMemberList(MemberBean mBean, Model model) {
	
		List<MemberBean> list =memberService.selectMemberList(mBean);
		
		model.addAttribute("memberList", list);

		return "/admin/memberList";
	}
	
	//로그아웃
	@RequestMapping("/member/logout")
	public String logout(MemberBean mBean, HttpSession session){
		session.removeAttribute("loginBean");
		return "redirect:/";
	}

	
	// updateMember : 회원정보수정
	@RequestMapping("/member/updateMemberForm")
	public String updateMember(MemberBean mBean, Model model, HttpSession session){
		
		int intVal = memberService.updateMember(mBean);
		
		if(intVal > 0) {
			//업데이트 성공
			
			MemberBean tmp = (MemberBean)session.getAttribute("loginBean");
			String str="";
			str=tmp.getMemberId();

			if(str.equals("admin")){
				return "redirect:/member/selectMemberList.do";
			}
				return "/member/memberInfo";
			
		}
		
		model.addAttribute("result", "fail");
		model.addAttribute("resultMsg", "회원정보 수정 실패");
		
		return "/member/updateMember";
	}
	
	//회원정보
	@RequestMapping("/member/updateMember")
	public String memberInfo(MemberBean bean, Model model, HttpSession session) {
		
		MemberBean mBean = memberService.selectMember(bean);
		
		model.addAttribute("memberBean", mBean);
		
		return "/member/updateMember";

	}
		
	// deleteMember : 회원탈퇴, 회원정보 삭제
	@RequestMapping("/member/delete")
	public String delete(MemberBean bean, Model model, HttpSession session){
		
		int intVal = memberService.deleteMember(bean);
		
		if(intVal > 0) {
			
			MemberBean tmp = (MemberBean)session.getAttribute("loginBean");
			String str="";
			str=tmp.getMemberId();

			if(str.equals("admin")){
				return "redirect:/member/selectMemberList.do";
			}
			return "redirect:/index.do";
		}
		model.addAttribute("result", "fail");
		model.addAttribute("resultMsg", "회원정보 삭제에 실패 하였습니다.");
		
		return "redirect:/member/loginAf.do";
	}

	
}
